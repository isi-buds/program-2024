---
title: "Visualizing Data with ggplot"
execute:
  echo: true
subtitle: "ISI-BUDS 2024"
format: 
  revealjs:
    slide-number: true
    incremental: true
    theme: ["../slide-style.scss"]
    title-slide-attributes: 
      data-background-size: 12%
      data-background-position: 50% 75%
---

:::{.font75}

## Visualizing Two Categorical Variables

:::

```{r}
#| echo: false
#| message: false
#| warning: false
library(openintro)
library(tidyverse)
library(palmerpenguins)
library(titanic)
library(janitor)

theme_set(theme_gray(base_size = 18))

titanic <- titanic_train %>% 
  clean_names() %>% 
  select(survived, pclass, sex, age, fare, embarked) %>% 
  mutate(
    pclass = case_when(
      pclass == 1 ~ "First", 
      pclass == 2 ~ "Second",
      pclass == 3 ~ "Third"
    ),
    embarked = case_when(
      embarked == "S" ~ "Southampton",
      embarked == "C" ~ "Cherbourg",
      embarked == "Q" ~ "Queenstown"
    ),
    embarked = as.factor(embarked),
    sex = as.factor(sex),
    survived = as.logical(survived)
  )
```


## Stacked Bar-Plot

:::: {.columns}

::: {.column width="50%"}

```{r `code-line-numbers`="5"}
#| eval: false
ggplot(
  data = titanic,
  aes(
    x = pclass, 
    fill = survived
  )
) + 
  geom_bar() 
```

:::

::: {.column width="50%"}

```{r}
#| echo: false
#| fig-height: 5
ggplot(
  data = titanic,
  aes(
    x = pclass,
    fill = survived
  )
) +
  geom_bar()
```
:::

::::



## Standardized Bar Plot

:::: {.columns}

::: {.column width="50%"}

```{r `code-line-numbers`="8"}
#| eval: false
ggplot(
  data = titanic,
  aes(
    x = pclass, 
    fill = survived
  )
) + 
  geom_bar(position = "fill") 
```


:::



::: {.column width="50%"}

```{r}
#| echo: false
#| fig-height: 5
ggplot(
  data = titanic,
  aes(x = pclass, fill = survived)
) +
  geom_bar(position = "fill")
```

:::

::::

Note that y-axis is no longer count but we will learn how to change that later.



## New Data

```{r}
#| echo: false
#| fig-align: 'center'
#| fig-height: 0.3
knitr::include_graphics("img/penguins.png")
```

Artwork by [@allison_horst](https://twitter.com/allison_horst) 



## New Data

```{r}
glimpse(penguins)
```

---

```{r}
#| echo: false
#| fig-align: 'center'
knitr::include_graphics("img/penguin_bill.png")
```

Artwork by [@allison_horst](https://twitter.com/allison_horst)


##

:::{.font75}

Visualizing a single numerical and single categorical variable

:::


:::: {.columns}

::: {.column width="50%}

```{r}
#| eval: false
#| fig-height: 5
ggplot(
  penguins,
  aes(
    x = species,
    y = bill_length_mm
  )
)  +
  geom_violin()
```

:::

::: {.column width="50%}

```{r}
#| echo: false
#| fig-height: 5
#| fig-align: 'center'
ggplot(
  penguins,
  aes(x = species, y = bill_length_mm)
)  +
  geom_violin()
```

:::

::::

##

:::{.font75}

Visualizing a single numerical and single categorical variable

:::


:::: {.columns}

::: {.column width="50%}

```{r}
#| eval: false
#| fig-height: 5
ggplot(
  penguins,
  aes(
    x = species, 
    y = bill_length_mm
  )
)  +
  geom_boxplot()
```

:::

::: {.column width="50%}

```{r}
#| echo: false
#| fig-height: 5
#| fig-align: 'center'
ggplot(
  penguins,
  aes(x = species, y = bill_length_mm)
)  +
  geom_boxplot()
```

:::

::::




##

:::{.font75}

Visualizing Two Numerical Variables

:::

::::{.columns}

::: {.column width="50%"}

```{r}
#| eval: false
ggplot(
  penguins,
  aes(
    x = bill_depth_mm,
    y = bill_length_mm
  )
)  +
  geom_point()
```

:::

::: {.column width="50%"}

```{r}
#| echo: false
ggplot(
  penguins,
  aes(x = bill_depth_mm, y = bill_length_mm))  +
  geom_point()
```

:::


::::



##

:::{.font75}

Considering More Than Two Variables

:::

::::{.columns}

::: {.column width="50%"}

```{r}
#| eval: false
ggplot(
  penguins,
  aes(
    x = bill_depth_mm,
    y = bill_length_mm,
    color = species
  )) +
  geom_point()
```

:::

::: {.column width="50%"}

```{r}
#| echo: false
ggplot(
  penguins,
  aes(x = bill_depth_mm, y = bill_length_mm, color= species)
) +
  geom_point()
```

:::

::::

##

::::{.columns}

::: {.column width="50%"}

```{r eval = FALSE, `code-line-numbers`="6"}
ggplot(
  penguins,
  aes(
    x = bill_depth_mm, 
    y = bill_length_mm, 
    shape = species
  )
) +
  geom_point()
```

:::


::: {.column width="50%"}

```{r echo = FALSE}
ggplot(
  penguins,
  aes(x = bill_depth_mm, y = bill_length_mm, shape = species)
)  +
  geom_point()
```

:::

::::


##


::::{.columns}

::: {.column width="50%"}

```{r eval = FALSE, `code-line-numbers`="7"}
ggplot(
  penguins,
  aes(
    x = bill_depth_mm,
    y = bill_length_mm,
    shape = species,
    color = species
  )) +
  geom_point()
```

:::



::: {.column width="50%"}

```{r echo=FALSE}
ggplot(
  penguins,
  aes(
    x = bill_depth_mm,
    y = bill_length_mm,
    shape = species,
    color = species
  )
)  +
  geom_point()
```

:::

::::

##

::::{.columns}

::: {.column width="50%"}


```{r, `code-line-numbers`="8"}
#| eval: false
ggplot(
  penguins,
  aes(
    x = bill_depth_mm,
    y = bill_length_mm,
    shape = species,
    color = species,
    size = body_mass_g
  )
) +
  geom_point()
```

:::




::: {.column width="50%"}

```{r}
#| echo: false
ggplot(
  penguins,
  aes(
    x = bill_depth_mm,
    y = bill_length_mm,
    shape = species,
    color = species,
    size = body_mass_g
  ))  +
  geom_point()
```

:::

::::

##

```{r}
#| echo: false
#| out-width: "95%"
knitr::include_graphics("img/ggplot-summary.jpeg")
```


## tidyverse style guide

`+` should always have a space before it and be followed by a new line.

## Further Resources

- [the ggplot flipbook](https://evamaerey.github.io/ggplot_flipbook/ggplot_flipbook_xaringan.html#1)
- [ggplot2 book](https://ggplot2-book.org/)
- [TidyTuesday](https://github.com/rfordatascience/tidytuesday) and #TidyTuesday on Twitter.
